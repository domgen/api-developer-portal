name: Render Portal

on:
  push:
    branches:
      - main
    paths:
      - 'specs/**'

permissions:
  contents: write
  pages: write
  id-token: write

env:
  BUILD_ARGS: --theme.openapi.theme.typography.code.fontFamily='monospace' --theme.openapi.theme.typography.headings.fontFamily='Roboto,sans-serif' --theme.openapi.theme.typography.fontFamily='Roboto,sans-serif'

jobs:
  # Calculate changes
  calculate-changes:
    runs-on: ubuntu-latest
    outputs:
      added: ${{ steps.changed-files.outputs.added_files }}
      modified: ${{ steps.changed-files.outputs.modified_files }}
      removed: ${{ steps.changed-files.outputs.deleted_files }}
      render-index: ${{ steps.changed-files.outputs.any_modified }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: 'specs/*'
          matrix: true

  # Render newly added specs
  render-added:
    name: Render new specs
    if: ${{ needs.calculate-changes.outputs.added != '[]' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: calculate-changes
    strategy:  
      matrix: 
        file: ${{ fromJSON(needs.calculate-changes.outputs.added) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4        
      - name: Get Basename
        id: basename
        run: |
          basefile=$(basename '${{ matrix.file }}')
          echo "render_name=${basefile%.*}" >> "$GITHUB_OUTPUT"
      - name: Create the page folder
        run: mkdir -p "pages/${{ steps.basename.outputs.render_name }}"
      - name: Render the spec
        uses: fluximus-prime/redocly-cli-github-action@v1
        with:
          args: build-docs ${{ matrix.file }} --output "pages/${{ steps.basename.outputs.render_name }}/index.html" ${{ env.BUILD_ARGS }}
      - name: Check in any changes
        uses: domgen/api-developer-portal/.github/actions/matrix-git-push@main
        with:
          ref: ${{ github.ref }}
          add: "pages/${{ steps.basename.outputs.render_name }}"

  # Render modified specs
  render-modified:
    name: Render modified specs
    if: ${{ needs.calculate-changes.outputs.modified != '[]' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: calculate-changes
    strategy:  
      matrix: 
        file: ${{ fromJSON(needs.calculate-changes.outputs.modified) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4        
      - name: Get Basename
        id: basename
        run: |
          basefile=$(basename '${{ matrix.file }}')
          echo "render_name=${basefile%.*}" >> "$GITHUB_OUTPUT"
      - name: Delete the existing folder and contents
        run: rm -rf "pages/${{ steps.basename.outputs.render_name }}"
      - name: Create the page folder
        run: mkdir -p "pages/${{ steps.basename.outputs.render_name }}"
      - name: Render the spec
        uses: fluximus-prime/redocly-cli-github-action@v1
        with:
          args: build-docs ${{ matrix.file }} --output "pages/${{ steps.basename.outputs.render_name }}/index.html" ${{ env.BUILD_ARGS }}
      - name: Check in any changes
        uses: domgen/api-developer-portal/.github/actions/matrix-git-push@main
        with:
          ref: ${{ github.ref }}
          add: "pages/${{ steps.basename.outputs.render_name }}"

  # Handle removed
  render-removed:
    name: Render removed specs
    if: ${{ needs.calculate-changes.outputs.removed != '[]' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: calculate-changes
    strategy:  
      matrix: 
        file: ${{ fromJSON(needs.calculate-changes.outputs.removed) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4        
      - name: Get Basename
        id: basename
        run: |
          basefile=$(basename '${{ matrix.file }}')
          echo "render_name=${basefile%.*}" >> "$GITHUB_OUTPUT"
      - name: Delete the existing folder and contents
        run: rm -rf "pages/${{ steps.basename.outputs.render_name }}"
      - name: Check in any changes
        uses: domgen/api-developer-portal/.github/actions/matrix-git-push@main
        with:
          ref: ${{ github.ref }}
          add: "pages/${{ steps.basename.outputs.render_name }}"

  # Update the index page
  update-index:
    runs-on: ubuntu-latest
    needs: [calculate-changes, render-added , render-modified, render-removed]
    if: |
      always() &&
      needs.calculate-changes.outputs.render-index == 'true' &&
      (needs.render-added.result == 'success' ||  needs.render-added.result == 'skipped') &&
      (needs.render-modified.result == 'success' ||  needs.render-modified.result == 'skipped') &&
      (needs.render-removed.result == 'success'||  needs.render-removed.result == 'skipped')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Pull changes
        run: git pull --all
      - name: Install yq
        uses: dcarbone/install-yq-action@v1.1.1
      - name: Build Template Data file
        run: |
          first="true"
          echo "{\"apis\":[" > template-list.json
          
          for file in `ls -1tr specs/*.yaml`; do
            base_filename=$(basename $file .yaml)
            title=$(yq '.info.title // ""' $file | jq -Rsa . | sed -e 's/\\n"/"/g')
            description=$(yq '.info.description // "..."' $file | jq -Rsa . | sed -e 's/\\n"/"/g')
            version=$(yq '.info.version // "0.0.0"' $file)
            href="/${base_filename}"
            
            file_ts=$(stat -c '%Y' $file)
            file_day=$(date -d "@$file_ts"  '+%d')
            case $file_day in
                1?) file_day=${file_day}th ;;
                *1) file_day=${file_day}st ;;
                *2) file_day=${file_day}nd ;;
                *3) file_day=${file_day}rd ;;
                *)  file_day=${file_day}th ;;
            esac
            file_date="$file_day "$(date -d "@$file_ts" '+%b %Y')
            if [ "$first" != "true" ] ; then
              comma=","
            else
              comma=""
              first="false"
            fi;
            echo "  $comma{\"title\":$title,\"description\":$description,\"version\":\"$version\",\"href\":\"$href\",\"date\":\"${file_date}\"}" >> template-list.json  
          done
          echo "]}" >> template-list.json
          
          jq '.apis | group_by(.title) | map({key: .[0].href | split("/")| .[1] | split("-") | .[0:-1] | join("-"), value: {"title": .[0].title, "description": .[0].description, "href": .[0].href | split("/")| .[1] | split("-") | .[0:-1] | join("-"), "date": .[0].date, "versions": map(.version) | sort_by(values) | reverse }}) | {"apis": map(.value) }' template-list.json > template-data.json
          cat template-data.json
      - name: Render Template
        uses: cuchi/jinja2-action@v1.3.0
        with:
          template: tmpl/index.html
          output_file: pages/index.html
          data_file: template-data.json
          data_format: json
      - name: Check in any changes
        uses: EndBug/add-and-commit@v9
        with:
          add: pages/index.html
          default_author: github_actions
          pull: '-q'
          fetch: true
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 
